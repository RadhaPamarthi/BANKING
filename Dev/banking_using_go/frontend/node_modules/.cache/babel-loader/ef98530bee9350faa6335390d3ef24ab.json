{"ast":null,"code":"var _jsxFileName = \"/Users/radhakrishna/Desktop/new go project/frontend/src/Register.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nfunction Register() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [data, setData] = useState(null);\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/register', {\n        username,\n        password\n      });\n      setData(response.data); // Now using the response\n      console.log(\"Registration successful\", response.data);\n    } catch (error) {\n      console.error('Failed to register');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 30\n    }\n  }, registrationData && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 30\n    }\n  }, \"Welcome, \", registrationData.username, \"!\")));\n}\nexport default Register;","map":{"version":3,"names":["React","useState","axios","Register","username","setUsername","password","setPassword","data","setData","handleRegister","e","preventDefault","response","post","console","log","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","registrationData"],"sources":["/Users/radhakrishna/Desktop/new go project/frontend/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Register() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [data, setData] = useState(null);\n\nconst handleRegister = async (e) => {\n    e.preventDefault();\n    try {\n        const response = await axios.post('http://localhost:8000/register', { username, password });\n        setData(response.data); // Now using the response\n        console.log(\"Registration successful\", response.data);\n    } catch (error) {\n        console.error('Failed to register');\n    }\n};\n\n    return (\n        <div>\n            <h2>Register</h2><div>\n        {registrationData && <p>Welcome, {registrationData.username}!</p>}\n        {/* Render more UI elements based on registrationData as needed */}\n    </div>\n        </div>\n    );\n}\n\nexport default Register;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQA,CAAA,EAAG;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMS,cAAc,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,gCAAgC,EAAE;QAAEV,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC3FG,OAAO,CAACI,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC;MACxBO,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAACL,IAAI,CAAC;IACzD,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,oBAAoB,CAAC;IACvC;EACJ,CAAC;EAEG,oBACIjB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIxB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eAAAxB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpBC,gBAAgB,iBAAIzB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,WAAS,EAACC,gBAAgB,CAACrB,QAAQ,EAAC,GAAI,CAE/D,CACI,CAAC;AAEd;AAEA,eAAeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}